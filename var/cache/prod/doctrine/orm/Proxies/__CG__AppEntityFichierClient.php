<?php

namespace Proxies\__CG__\App\Entity;


/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class FichierClient extends \App\Entity\FichierClient implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'id', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'Id_cli', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'id_demande', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'nom_fichier', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'path', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'date_fichier', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'name_md5'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'id', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'Id_cli', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'id_demande', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'nom_fichier', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'path', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'date_fichier', '' . "\0" . 'App\\Entity\\FichierClient' . "\0" . 'name_md5'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (FichierClient $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load(): void
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized(): bool
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized): void
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null): void
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer(): ?\Closure
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null): void
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner(): ?\Closure
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties(): array
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId(): ?int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getIdCli(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdCli', []);

        return parent::getIdCli();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdCli(int $Id_cli): \App\Entity\FichierClient
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdCli', [$Id_cli]);

        return parent::setIdCli($Id_cli);
    }

    /**
     * {@inheritDoc}
     */
    public function getIdDemande(): ?int
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIdDemande', []);

        return parent::getIdDemande();
    }

    /**
     * {@inheritDoc}
     */
    public function setIdDemande(int $id_demande): \App\Entity\FichierClient
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIdDemande', [$id_demande]);

        return parent::setIdDemande($id_demande);
    }

    /**
     * {@inheritDoc}
     */
    public function getNomFichier(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNomFichier', []);

        return parent::getNomFichier();
    }

    /**
     * {@inheritDoc}
     */
    public function setNomFichier(string $nom_fichier): \App\Entity\FichierClient
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNomFichier', [$nom_fichier]);

        return parent::setNomFichier($nom_fichier);
    }

    /**
     * {@inheritDoc}
     */
    public function getPath(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPath', []);

        return parent::getPath();
    }

    /**
     * {@inheritDoc}
     */
    public function setPath(string $path): \App\Entity\FichierClient
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPath', [$path]);

        return parent::setPath($path);
    }

    /**
     * {@inheritDoc}
     */
    public function getDateFichier(): ?\DateTimeInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDateFichier', []);

        return parent::getDateFichier();
    }

    /**
     * {@inheritDoc}
     */
    public function setDateFichier(\DateTimeInterface $date_fichier): \App\Entity\FichierClient
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDateFichier', [$date_fichier]);

        return parent::setDateFichier($date_fichier);
    }

    /**
     * {@inheritDoc}
     */
    public function getNameMd5(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getNameMd5', []);

        return parent::getNameMd5();
    }

    /**
     * {@inheritDoc}
     */
    public function setNameMd5(string $name_md5): \App\Entity\FichierClient
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setNameMd5', [$name_md5]);

        return parent::setNameMd5($name_md5);
    }

}
